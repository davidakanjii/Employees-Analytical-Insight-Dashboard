<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin - right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin - right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1><div>Power BI Documentation</div></h1><br></br><hr></hr><h2><div>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).</div><br></br><div>Date: 4/24/2023 2:50:18 AM</div><br></br></h2><h1><div>------------------******   Visualization    ******---------------------</div></h1><br></br><h2><div>File: Hr Dashboard for AI Everyday.pbix</div></h2><br></br><h3><div>Path: D:\PP\Dataproanalytic\Learning Content\My Past Power BI Training Project\Hr Dashboard for AI Everyday.pbix</div></h2><br></br><hr></hr><br></br><h3><div>List of Pages:</div></h3><br></br><table border='1px' cellpadding='1'><tr ><td >DisplayName</td><td >Name</td><td >Ordinal</td><td >DisplayOption</td><td >Width</td><td >Height</td><td >PageIndex</td></tr><tr ><td >Page 1</td><td >ReportSection</td><td >0</td><td >1</td><td >1980</td><td >1200</td><td >0</td></tr></table><hr></hr><br></br><h3><div>Visuals in Page 1:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >card</td><td ></td><td >140.425531914894</td><td >160.085106382979</td><td >0</td><td >196.595744680851</td><td >95.4893617021277</td><td >75c8167e9a389a71bb39</td><td ></td><td >0</td><td >0</td></tr><tr ><td >card</td><td ></td><td >480.255319148936</td><td >160.085106382979</td><td >1000</td><td >210.63829787234</td><td >106.723404255319</td><td >a95252ab7e0f486a6236</td><td ></td><td >1</td><td >0</td></tr><tr ><td >card</td><td ></td><td >794.808510638298</td><td >160.085106382979</td><td >2000</td><td >174.127659574468</td><td >109.531914893617</td><td >07ab041fab25202c9edf</td><td ></td><td >2</td><td >0</td></tr><tr ><td >card</td><td ></td><td >1129.02127659574</td><td >162.893617021277</td><td >3000</td><td >151.659574468085</td><td >87.063829787234</td><td >272f631534f3f561056a</td><td ></td><td >3</td><td >0</td></tr><tr ><td >card</td><td ></td><td >1432.34042553191</td><td >160.085106382979</td><td >4000</td><td >157.276595744681</td><td >87.063829787234</td><td >9ddc28674050373e09eb</td><td ></td><td >4</td><td >0</td></tr><tr ><td >card</td><td ></td><td >1746.89361702128</td><td >160.085106382979</td><td >5000</td><td >137.617021276596</td><td >87.063829787234</td><td >121ca85f7c4aef824c68</td><td ></td><td >5</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >134.237288135593</td><td >246.101694915254</td><td >6000</td><td >219.254237288136</td><td >46.9830508474576</td><td >c1aa28ad3e1558d85a34</td><td ></td><td >6</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >465.35593220339</td><td >248.338983050847</td><td >7000</td><td >219.254237288136</td><td >46.9830508474576</td><td >fd4c8ddcf3dd205b994d</td><td ></td><td >7</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >772.340425531915</td><td >247.148936170213</td><td >8000</td><td >219.063829787234</td><td >47.7446808510638</td><td >d350e0e5265b07069c02</td><td ></td><td >8</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >1096.27118644068</td><td >252.813559322034</td><td >9000</td><td >219.254237288136</td><td >46.9830508474576</td><td >aa45c37e9e975c2a1664</td><td ></td><td >9</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >1401.44680851064</td><td >244.340425531915</td><td >10000</td><td >221.872340425532</td><td >47.7446808510638</td><td >71a7c5c76ac10f34a05d</td><td ></td><td >10</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >1716</td><td >241.531914893617</td><td >11000</td><td >219.063829787234</td><td >47.7446808510638</td><td >2e9a33f4bf2e3caf994a</td><td ></td><td >11</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >496.677966101695</td><td >342.305084745763</td><td >12000</td><td >219.254237288136</td><td >46.9830508474576</td><td >45875591c351c3fb2ad7</td><td ></td><td >12</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >125.28813559322</td><td >342.305084745763</td><td >13000</td><td >219.254237288136</td><td >46.9830508474576</td><td >ae9dbc92b6728b0d5f5d</td><td ></td><td >13</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >841.220338983051</td><td >342.305084745763</td><td >14000</td><td >219.254237288136</td><td >46.9830508474576</td><td >0173664b398ec3a19482</td><td ></td><td >14</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >606.305084745763</td><td >508.718480383423</td><td >15000</td><td >165.559322033898</td><td >35.7966101694915</td><td >dbf3121bda76232cf144</td><td ></td><td >15</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >409.423728813559</td><td >508.718480383423</td><td >16000</td><td >165.559322033898</td><td >35.7966101694915</td><td >f71e59bd330dd8503253</td><td ></td><td >16</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >243.864406779661</td><td >508.718480383423</td><td >17000</td><td >165.559322033898</td><td >35.7966101694915</td><td >6f0703323e8ee8b12c50</td><td ></td><td >17</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >69.3559322033898</td><td >508.718480383423</td><td >18000</td><td >165.559322033898</td><td >35.7966101694915</td><td >163c64f96c8469fe83c9</td><td ></td><td >18</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >763.819095477387</td><td >508.522926342029</td><td >19000</td><td >164.824120603015</td><td >36.1809045226131</td><td >a2c794e148347e58a55a</td><td ></td><td >19</td><td >0</td></tr><tr ><td >textbox</td><td ></td><td >976.884422110553</td><td >508.522926342029</td><td >20000</td><td >166.834170854271</td><td >36.1809045226131</td><td >144131289cd2df4d18b0</td><td ></td><td >20</td><td >0</td></tr><tr ><td >card</td><td ></td><td >103.914893617021</td><td >544.851063829787</td><td >21000</td><td >140.425531914894</td><td >95.4893617021277</td><td >62b911d1f20a3dcfadab</td><td ></td><td >21</td><td >0</td></tr><tr ><td >card</td><td ></td><td >285.344680851064</td><td >544.851063829787</td><td >22000</td><td >123.574468085106</td><td >95.4893617021277</td><td >aae650ad3f7573043b19</td><td ></td><td >22</td><td >0</td></tr><tr ><td >card</td><td ></td><td >449.923404255319</td><td >544.851063829787</td><td >23000</td><td >134.808510638298</td><td >95.4893617021277</td><td >38cac0291216875b6963</td><td ></td><td >23</td><td >0</td></tr><tr ><td >card</td><td ></td><td >625.736170212766</td><td >544.851063829787</td><td >24000</td><td >134.808510638298</td><td >95.4893617021277</td><td >3d3db5f45a28256a5a05</td><td ></td><td >24</td><td >0</td></tr><tr ><td >card</td><td ></td><td >801.548936170213</td><td >544.851063829787</td><td >25000</td><td >134.808510638298</td><td >95.4893617021277</td><td >03d238ddf1c52250e77d</td><td ></td><td >25</td><td >0</td></tr><tr ><td >card</td><td ></td><td >977.361702127659</td><td >544.851063829787</td><td >26000</td><td >134.808510638298</td><td >95.4893617021277</td><td >74901910562ce3e41803</td><td ></td><td >26</td><td >0</td></tr><tr ><td >donutChart</td><td ></td><td >1182.3829787234</td><td >342.63829787234</td><td >27000</td><td >356.68085106383</td><td >297.702127659574</td><td >9e7bd02b86fd0573c157</td><td ></td><td >27</td><td >0</td></tr><tr ><td >donutChart</td><td ></td><td >1581.1914893617</td><td >348.255319148936</td><td >28000</td><td >356.68085106383</td><td >297.702127659574</td><td >7205ee416646dac3c431</td><td ></td><td >28</td><td >0</td></tr><tr ><td >areaChart</td><td ></td><td >1199.23404255319</td><td >696.510638297872</td><td >29000</td><td >730.212765957447</td><td >199.404255319149</td><td >d48ba536b69f51d99bb8</td><td ></td><td >29</td><td >0</td></tr><tr ><td >areaChart</td><td ></td><td >1216.08510638298</td><td >949.276595744681</td><td >30000</td><td >730.212765957447</td><td >199.404255319149</td><td >f3b4558f51cf5489a7f1</td><td ></td><td >30</td><td >0</td></tr><tr ><td >pivotTable</td><td ></td><td >50.5531914893617</td><td >696.510638297872</td><td >31000</td><td >1100.93617021277</td><td >471.829787234043</td><td >9125ef954a0c50bb30ff</td><td ></td><td >31</td><td >0</td></tr><tr ><td >slicer</td><td >'Active?'</td><td >918.382978723404</td><td >44.936170212766</td><td >32000</td><td >140.425531914894</td><td >75.8297872340426</td><td >c3a3228f55f5ddd02ab6</td><td ></td><td >32</td><td >0</td></tr><tr ><td >slicer</td><td >'Work Type'</td><td >1098.41134751773</td><td >44.936170212766</td><td >33000</td><td >140</td><td >75.8297872340426</td><td >12e4a602078544d494e1</td><td ></td><td >33</td><td >0</td></tr><tr ><td >slicer</td><td >'Separation Reason'</td><td >1278.391959799</td><td >20.1005025125628</td><td >34000</td><td >138.693467336683</td><td >76.3819095477387</td><td >a4024cb090a45dc8f3eb</td><td ></td><td >34</td><td >0</td></tr><tr ><td >slicer</td><td >'Business Unit'</td><td >1457.6170212766</td><td >44.936170212766</td><td >35000</td><td >140.425531914894</td><td >75.8297872340426</td><td >2168550e219b99db26c5</td><td ></td><td >35</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >1748.50299401198</td><td >16.7664670658683</td><td >36000</td><td >79.0419161676647</td><td >79.0419161676647</td><td >4128a114f829bae87640</td><td ></td><td >36</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >1858.68263473054</td><td >14.3712574850299</td><td >37000</td><td >81.437125748503</td><td >79.0419161676647</td><td >1c9c99307b2481771922</td><td ></td><td >37</td><td >0</td></tr></table><hr></hr><br></br><h3><div>List of all Columns/Fields/Measures/Expressions Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >Aggregation</td><td >Expression</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >Total Hired Employees</td><td >Dates</td><td ></td><td >Dates.Total Hired Employees</td><td >0</td><td >0</td></tr><tr ><td >Total Salary Cost</td><td >Key Measures</td><td ></td><td >Key Measures.Total Salary Cost</td><td >1</td><td >0</td></tr><tr ><td >Average Salary</td><td >Key Measures</td><td ></td><td >Key Measures.Average Salary</td><td >2</td><td >0</td></tr><tr ><td >Average Tenure (Yrs)</td><td >Key Measures</td><td ></td><td >Key Measures.Average Tenure (Yrs)</td><td >3</td><td >0</td></tr><tr ><td >Total Business Unit</td><td >Key Measures</td><td ></td><td >Key Measures.Total Business Unit</td><td >4</td><td >0</td></tr><tr ><td >Total Department</td><td >Key Measures</td><td ></td><td >Key Measures.Total Department</td><td >5</td><td >0</td></tr><tr ><td >Active Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Active Employees</td><td >21</td><td >0</td></tr><tr ><td >Inactive Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Inactive Employees</td><td >22</td><td >0</td></tr><tr ><td >Voluntary</td><td >Key Measures</td><td ></td><td >Key Measures.Voluntary</td><td >23</td><td >0</td></tr><tr ><td >Involuntary</td><td >Key Measures</td><td ></td><td >Key Measures.Involuntary</td><td >24</td><td >0</td></tr><tr ><td >Hourly</td><td >Key Measures</td><td ></td><td >Key Measures.Hourly</td><td >25</td><td >0</td></tr><tr ><td >Salary</td><td >Key Measures</td><td ></td><td >Key Measures.Salary</td><td >26</td><td >0</td></tr><tr ><td >Gender</td><td >Employee Data</td><td ></td><td >Employee Data.Gender</td><td >27</td><td >0</td></tr><tr ><td >Total Hired Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Total Hired Employees</td><td >27</td><td >0</td></tr><tr ><td >Gender</td><td >Employee Data</td><td ></td><td >Employee Data.Gender</td><td >27</td><td >0</td></tr><tr ><td >Total Hired Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Total Hired Employees</td><td >28</td><td >0</td></tr><tr ><td >AgeGroup</td><td >Employee Data</td><td ></td><td >Employee Data.AgeGroup</td><td >28</td><td >0</td></tr><tr ><td >AgeGroup</td><td >Employee Data</td><td ></td><td >Employee Data.AgeGroup</td><td >28</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >29</td><td >0</td></tr><tr ><td >Total Hired Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Total Hired Employees</td><td >29</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >29</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >30</td><td >0</td></tr><tr ><td >Total Sick Days</td><td >Key Measures</td><td ></td><td >Key Measures.Total Sick Days</td><td >30</td><td >0</td></tr><tr ><td >Date</td><td >Dates</td><td ></td><td >Dates.Date</td><td >30</td><td >0</td></tr><tr ><td >Cost Centre</td><td >Employee Data</td><td ></td><td >Employee Data.Cost Centre</td><td >31</td><td >0</td></tr><tr ><td >Total Hired Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Total Hired Employees</td><td >31</td><td >0</td></tr><tr ><td >Active Employees</td><td >Key Measures</td><td ></td><td >Key Measures.Active Employees</td><td >31</td><td >0</td></tr><tr ><td >Hourly</td><td >Key Measures</td><td ></td><td >Key Measures.Hourly</td><td >31</td><td >0</td></tr><tr ><td >Salary</td><td >Key Measures</td><td ></td><td >Key Measures.Salary</td><td >31</td><td >0</td></tr><tr ><td >Total Salary Cost</td><td >Key Measures</td><td ></td><td >Key Measures.Total Salary Cost</td><td >31</td><td >0</td></tr><tr ><td >Average Salary</td><td >Key Measures</td><td ></td><td >Key Measures.Average Salary</td><td >31</td><td >0</td></tr><tr ><td >Average Tenure (Yrs)</td><td >Key Measures</td><td ></td><td >Key Measures.Average Tenure (Yrs)</td><td >31</td><td >0</td></tr><tr ><td >Total Leave Balances</td><td >Key Measures</td><td ></td><td >Key Measures.Total Leave Balances</td><td >31</td><td >0</td></tr><tr ><td >Cost Centre</td><td >Employee Data</td><td ></td><td >Employee Data.Cost Centre</td><td >31</td><td >0</td></tr><tr ><td >Remains Employed</td><td >Employee Data</td><td ></td><td >Employee Data.Remains Employed</td><td >32</td><td >0</td></tr><tr ><td >Remains Employed</td><td >Employee Data</td><td ></td><td >Employee Data.Remains Employed</td><td >32</td><td >0</td></tr><tr ><td >Work Type</td><td >Employee Data</td><td ></td><td >Employee Data.Work Type</td><td >33</td><td >0</td></tr><tr ><td >Work Type</td><td >Employee Data</td><td ></td><td >Employee Data.Work Type</td><td >33</td><td >0</td></tr><tr ><td >SeperationReason</td><td >Employee Data</td><td ></td><td >Employee Data.SeperationReason</td><td >34</td><td >0</td></tr><tr ><td >Remains Employed</td><td >Employee Data</td><td ></td><td >Employee Data.Remains Employed</td><td >34</td><td >0</td></tr><tr ><td >SeperationReason</td><td >Employee Data</td><td ></td><td >Employee Data.SeperationReason</td><td >34</td><td >0</td></tr><tr ><td >Business Unit</td><td >Employee Data</td><td ></td><td >Employee Data.Business Unit</td><td >35</td><td >0</td></tr><tr ><td >Business Unit</td><td >Employee Data</td><td ></td><td >Employee Data.Business Unit</td><td >35</td><td >0</td></tr></table><hr></hr><br></br><h3><div>List of Tables Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >Key Measures</td></tr><tr ><td >Employee Data</td></tr><tr ><td >Dates</td></tr></table><hr></hr><br></br><h3><div>List of Columns Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >State</td><td >Data Category</td><td >Data Type</td><td >Description</td><td >Display Folder</td><td >Error Message</td><td >Format String</td><td >Is Hidden</td><td >Modified Time</td><td >Structure Modified Time</td><td >Sort by Column</td><td >Summarize By</td><td >Type</td><td >Expression</td></tr><tr ><td >EmployeeID</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Age</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >EthnicGroup</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >HireDate</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >PayType</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Age Group</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >TenureDays</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >TernureMonths</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Leave Balance</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sick Days Last 12 Mths)</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Current Salary</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Current Employee Rating</td><td >Employee Data</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Year</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >QuarterOfYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthOfYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DayOfMonth</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DateInt</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthName</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthInCalendar</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >QuarterInCalendar</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DayInWeek</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >DayOfWeekName</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >WeekEnding</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Week Number</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >MonthnYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >QuarternYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >ShortYear</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >FY</td><td >Dates</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr></table><h1><div>------------------******   Model    ******---------------------</div></h1><br></br><h2><div>Model: Hr Dashboard for AI Everyday</div></h2><br></br><hr></hr><br></br><h3><div>List of Tables:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >Employee Data</td><td ></td><td >Import</td><td ><pre>let
    Source = Excel.Workbook(Web.Contents("https://docs.google.com/spreadsheets/d/1xZZ-SRDx3nT1hw-dZhXM3oEOh_UGORLS0tRwU4lbe4g/export?format=xlsx"), null, true),
    Table_1_Table = Source{[Item="Table_1",Kind="Table"]}[Data],
    #"Changed Type" = Table.TransformColumnTypes(Table_1_Table,{{"EmployeeID", Int64.Type}, {"Gender", type text}, {"Age", Int64.Type}, {"EthnicGroup", type text}, {"Work Type", type text}, {"Business Unit", type text}, {"Cost Centre", type text}, {"HireDate", type date}, {"Remains Employed", type text}, {"PayType", type text}, {"SeperationReason", type text}, {"AgeGroup", type text}, {"TenureDays", Int64.Type}, {"TernureMonths", Int64.Type}, {"Leave Balance", Int64.Type}, {"Sick Days Last 12 Mths)", Int64.Type}, {"Current Salary", Int64.Type}, {"Current Employee Rating", Int64.Type}}),
    #"Sorted Rows" = Table.Sort(#"Changed Type",{{"HireDate", Order.Descending}}),
    #"Renamed Columns" = Table.RenameColumns(#"Sorted Rows",{{"AgeGroup", "Age Group"}})
in
    #"Renamed Columns"</pre></td><td >False</td></tr><tr ><td >DateTableTemplate_620b999c-ffe9-4204-ac2f-95b543614e08</td><td ></td><td >Import</td><td ><pre>Calendar(Date(2015,1,1), Date(2015,1,1))</pre></td><td >True</td></tr><tr ><td >Dates</td><td ></td><td >Import</td><td ><pre>let
    Source = Query1(#date(1966, 12, 9), #date(2015, 12, 31), 1)
in
    Source</pre></td><td >False</td></tr><tr ><td >LocalDateTable_8bf2f4e2-19e9-4bbe-81ca-0a42a36f3495</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_fad05276-5f95-47f6-8caa-4d725d6a5266</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Dates'[WeekEnding])), 1, 1), Date(Year(MAX('Dates'[WeekEnding])), 12, 31))</pre></td><td >True</td></tr><tr ><td >Key Measures</td><td ></td><td >Import</td><td ><pre>let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
in
    #"Removed Columns"</pre></td><td >False</td></tr></table><hr></hr><br></br><h3><div>List of Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>Total Hired Employees</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>COUNTROWS('Employee Data')</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Hired Employees</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Hired Employees</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Active Employees</li>
<li>Measure: Inactive Employees</li>
<li>Measure: Voluntary</li>
<li>Measure: Involuntary</li>
<li>Measure: Hourly</li>
<li>Measure: Salary</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Total Salary Cost</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>SUM('Employee Data'[Current Salary])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Salary Cost</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Current Salary (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Salary Cost</td>
	</tr>
	<tr>
		<td>Average Salary</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>AVERAGE('Employee Data'[Current Salary])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Average Salary</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Current Salary (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Average Salary</td>
	</tr>
	<tr>
		<td>Average Tenure (Yrs)</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>DIVIDE( AVERAGE('Employee Data'[TenureDays]),365,0)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Average Tenure (Yrs)</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: TenureDays (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Average Tenure (Yrs)</td>
	</tr>
	<tr>
		<td>Total Business Unit</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>DISTINCTCOUNT('Employee Data'[Business Unit])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Business Unit</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Business Unit (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Business Unit</td>
	</tr>
	<tr>
		<td>Total Department</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>DISTINCTCOUNT('Employee Data'[Cost Centre])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Department</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Cost Centre (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Department</td>
	</tr>
	<tr>
		<td>Active Employees</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>
CALCULATE(
	[Total Hired Employees],
	'Employee Data'[Remains Employed] = "Yes"
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Active Employees</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Remains Employed (Table: Employee Data)</li>
<li><span class="caret">Measure: Total Hired Employees (Table: Key Measures)</span>
<ul class="nested">
<li>Table: Employee Data</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Active Employees</td>
	</tr>
	<tr>
		<td>Inactive Employees</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>
CALCULATE(
	[Total Hired Employees],
	'Employee Data'[Remains Employed] = "No"
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Inactive Employees</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Remains Employed (Table: Employee Data)</li>
<li><span class="caret">Measure: Total Hired Employees (Table: Key Measures)</span>
<ul class="nested">
<li>Table: Employee Data</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Inactive Employees</td>
	</tr>
	<tr>
		<td>Voluntary</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>
CALCULATE(
    [Total Hired Employees],
        FILTER(ALL('Employee Data'[Remains Employed]),'Employee Data'[Remains Employed] = "No"),
             FILTER(ALL('Employee Data'[SeperationReason]),'Employee Data'[SeperationReason] = "Voluntary") )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Voluntary</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Remains Employed (Table: Employee Data)</li>
<li>Column: SeperationReason (Table: Employee Data)</li>
<li><span class="caret">Measure: Total Hired Employees (Table: Key Measures)</span>
<ul class="nested">
<li>Table: Employee Data</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Voluntary</td>
	</tr>
	<tr>
		<td>Involuntary</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>
CALCULATE(
    [Total Hired Employees],
        FILTER(ALL('Employee Data'[Remains Employed]),'Employee Data'[Remains Employed] = "No"),
             FILTER(ALL('Employee Data'[SeperationReason]),'Employee Data'[SeperationReason] = "Involuntary") )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Involuntary</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Remains Employed (Table: Employee Data)</li>
<li>Column: SeperationReason (Table: Employee Data)</li>
<li><span class="caret">Measure: Total Hired Employees (Table: Key Measures)</span>
<ul class="nested">
<li>Table: Employee Data</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Involuntary</td>
	</tr>
	<tr>
		<td>Hourly</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>
CALCULATE([Total Hired Employees],
    FILTER('Employee Data','Employee Data'[PayType]= "Hourly"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Hourly</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: PayType (Table: Employee Data)</li>
<li><span class="caret">Measure: Total Hired Employees (Table: Key Measures)</span>
<ul class="nested">
<li>Table: Employee Data</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Hourly</td>
	</tr>
	<tr>
		<td>Salary</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>
CALCULATE([Total Hired Employees],
    FILTER('Employee Data','Employee Data'[PayType]= "Salary"))</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Salary</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: PayType (Table: Employee Data)</li>
<li><span class="caret">Measure: Total Hired Employees (Table: Key Measures)</span>
<ul class="nested">
<li>Table: Employee Data</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Salary</td>
	</tr>
	<tr>
		<td>Total Leave Balances</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>SUM('Employee Data'[Leave Balance])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Leave Balances</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Leave Balance (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Leave Balances</td>
	</tr>
	<tr>
		<td>Total Sick Days</td>
		<td>Key Measures</td>
		<td></td>
		<td><pre>sum('Employee Data'[Sick Days Last 12 Mths)])</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Total Sick Days</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Employee Data</li>
<li>Column: Sick Days Last 12 Mths) (Table: Employee Data)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Total Sick Days</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Employee Data:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>EmployeeID</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Gender</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Age</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>EthnicGroup</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Work Type</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Business Unit</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Cost Centre</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>HireDate</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Remains Employed</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>PayType</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>SeperationReason</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Age Group</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>TenureDays</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>TernureMonths</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Leave Balance</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Sick Days Last 12 Mths)</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Current Salary</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Current Employee Rating</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Dates:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Date</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Year</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>QuarterOfYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthOfYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DayOfMonth</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DateInt</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthName</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthInCalendar</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>QuarterInCalendar</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DayInWeek</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DayOfWeekName</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>WeekEnding</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Week Number</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>MonthnYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>QuarternYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ShortYear</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>FY</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Key Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Roles:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>Relationships:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >CrossFilteringBehavior</td><td >FromCardinality</td><td >FromColumn</td><td >FromTable</td><td >IsActive</td><td >IsRemoved</td><td >JoinOnDateBehavior</td><td >RelyOnReferentialIntegrity</td><td >SecurityFilteringBehavior</td><td >State</td><td >ToCardinality</td><td >ToColumn</td><td >ToTable</td><td >Type</td></tr><tr ><td >ac1bc647-33a8-4cd0-a6b7-181963c10359</td><td >OneDirection</td><td >Many</td><td >Date</td><td >Dates</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_8bf2f4e2-19e9-4bbe-81ca-0a42a36f3495</td><td >SingleColumn</td></tr><tr ><td >713fd058-5f39-43dc-8ac0-0acf165db763</td><td >OneDirection</td><td >Many</td><td >WeekEnding</td><td >Dates</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_fad05276-5f95-47f6-8caa-4d725d6a5266</td><td >SingleColumn</td></tr><tr ><td >104535d6-93b5-4cfe-acdf-c36898981443</td><td >OneDirection</td><td >Many</td><td >HireDate</td><td >Employee Data</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >Dates</td><td >SingleColumn</td></tr></table><hr></hr><br></br><h2><div>M (Power Query) Script:</div></h2><br></br><br></br><font face="verdana" size="2"<div>Employee Data-400547c5-8867-466d-b544-475920e9866d<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">Web.Contents</font>("https:<font color="green">//docs.google.com/spreadsheets/d/1xZZ-SRDx3nT1hw-dZhXM3oEOh_UGORLS0tRwU4lbe4g/export?format=xlsx"), <font color="blue">null</font>, <font color="blue">true</font>),</font>
    Table_1_Table = Source{[Item=<font color="red">"Table_1"</font>,Kind=<font color="red">"Table"</font>]}[Data],<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Table_1_Table,{{<font color="red">"EmployeeID"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Gender"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Age"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"EthnicGroup"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Work Type"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Business Unit"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Cost Centre"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"HireDate"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"Remains Employed"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"PayType"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"SeperationReason"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"AgeGroup"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"TenureDays"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"TernureMonths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Leave Balance"</font>, <font color="purple">Int64.Type</font>}, {"Sick Days Last 12 Mths)", <font color="purple">Int64.Type</font>}, {<font color="red">"Current Salary"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Current Employee Rating"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Sorted Rows"</font> = <font color="purple">Table.Sort</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"HireDate"</font>, <font color="purple">Order.Descending</font>}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Sorted Rows"</font>,{{<font color="red">"AgeGroup"</font>, <font color="red">"Age Group"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns"</font><br></br><br></br><br></br>----------------------<br></br>DateTableTemplate_620b999c-ffe9-4204-ac2f-95b543614e08-a1388cb1-fe60-4d05-b038-a189c8a0612d<br></br><br></br>Calendar(Date(2015,1,1), Date(2015,1,1))<br></br><br></br><br></br>----------------------<br></br>Dates-134d6a44-dcb8-4d17-a909-fca7b14664e3<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Query1</font>(#<font color="blue">date</font>(1966, 12, 9), #<font color="blue">date</font>(2015, 12, 31), 1)<br></br><font color="blue">in</font><br></br>    Source<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_8bf2f4e2-19e9-4bbe-81ca-0a42a36f3495-588bb73a-8dd7-41e2-ac95-588da991e26b<br></br><br></br>Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>LocalDateTable_fad05276-5f95-47f6-8caa-4d725d6a5266-d604e963-9683-4bdc-869c-8525653b7606<br></br><br></br>Calendar(Date(Year(MIN('Dates'[WeekEnding])), 1, 1), Date(Year(MAX('Dates'[WeekEnding])), 12, 31))<br></br><br></br><br></br>----------------------<br></br>Key Measures-b14a9597-9689-4a62-badf-513963988b92<br></br><br></br><font color="blue">let</font><br></br>    Source = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("i44FAA==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Column1 = _t]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Source,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type"</font>,{<font color="red">"Column1"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Removed Columns"</font><br></br><br></br><br></br>----------------------<br></br></font></div><br></br><hr></hr><br></br><h3><div>Partitions:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >Employee Data-400547c5-8867-466d-b544-475920e9866d</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Excel.Workbook</font>(<font color="purple">Web.Contents</font>("https:<font color="green">//docs.google.com/spreadsheets/d/1xZZ-SRDx3nT1hw-dZhXM3oEOh_UGORLS0tRwU4lbe4g/export?format=xlsx"), <font color="blue">null</font>, <font color="blue">true</font>),</font><br></br>    Table_1_Table = Source{[Item=<font color="red">"Table_1"</font>,Kind=<font color="red">"Table"</font>]}[Data],<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Table_1_Table,{{<font color="red">"EmployeeID"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Gender"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Age"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"EthnicGroup"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Work Type"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Business Unit"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Cost Centre"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"HireDate"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"Remains Employed"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"PayType"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"SeperationReason"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"AgeGroup"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"TenureDays"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"TernureMonths"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Leave Balance"</font>, <font color="purple">Int64.Type</font>}, {"Sick Days Last 12 Mths)", <font color="purple">Int64.Type</font>}, {<font color="red">"Current Salary"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Current Employee Rating"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Sorted Rows"</font> = <font color="purple">Table.Sort</font>(#<font color="red">"Changed Type"</font>,{{<font color="red">"HireDate"</font>, <font color="purple">Order.Descending</font>}}),<br></br>    #<font color="red">"Renamed Columns"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Sorted Rows"</font>,{{<font color="red">"AgeGroup"</font>, <font color="red">"Age Group"</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Renamed Columns"</font></td></tr><tr ><td >DateTableTemplate_620b999c-ffe9-4204-ac2f-95b543614e08-a1388cb1-fe60-4d05-b038-a189c8a0612d</td><td >Calendar(Date(2015,1,1), Date(2015,1,1))</td></tr><tr ><td >Dates-134d6a44-dcb8-4d17-a909-fca7b14664e3</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Query1</font>(#<font color="blue">date</font>(1966, 12, 9), #<font color="blue">date</font>(2015, 12, 31), 1)<br></br><font color="blue">in</font><br></br>    Source</td></tr><tr ><td >LocalDateTable_8bf2f4e2-19e9-4bbe-81ca-0a42a36f3495-588bb73a-8dd7-41e2-ac95-588da991e26b</td><td >Calendar(Date(Year(MIN('Dates'[Date])), 1, 1), Date(Year(MAX('Dates'[Date])), 12, 31))</td></tr><tr ><td >LocalDateTable_fad05276-5f95-47f6-8caa-4d725d6a5266-d604e963-9683-4bdc-869c-8525653b7606</td><td >Calendar(Date(Year(MIN('Dates'[WeekEnding])), 1, 1), Date(Year(MAX('Dates'[WeekEnding])), 12, 31))</td></tr><tr ><td >Key Measures-b14a9597-9689-4a62-badf-513963988b92</td><td ><font color="blue">let</font><br></br>    Source = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("i44FAA==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Column1 = _t]),<br></br>    #<font color="red">"Changed Type"</font> = <font color="purple">Table.TransformColumnTypes</font>(Source,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Removed Columns"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Changed Type"</font>,{<font color="red">"Column1"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Removed Columns"</font></td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>